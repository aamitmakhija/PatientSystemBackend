name: CI/CD Pipeline

on:
  push:
    branches:
      - RejoizBranch
  # pull_request:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to docker hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD}}
   
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t rejoiz/patientsystembackend .
   
    - name: Publish image to docker hub
      run: docker push rejoiz/patientsystembackend:latest
      
      

    # - name: Install dependencies
    #   run: npm install

    # - name: Run tests
    #   run: npm test

  deploy:
    runs-on: [aws-ec2]
    needs: build
    steps:
    - name: Pull image from docker hub
      run:  docker pull rejoiz/patientsystembackend:latest
    - name: Delete existing container
      run:  docker rm -f patientsystembackend-container
    - name: Run docker container
      run:  docker run -d -p 5001:5001 --name patientsystembackend-container rejoiz/patientsystembackend:latest

    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Set up SSH key for deployment
    #   run: |
    #     echo "${{ secrets.DEPLOY_KEY }}" > deploy_key
    #     chmod 600 deploy_key
    #     eval $(ssh-agent -s)
    #     ssh-add deploy_key
    #     mkdir -p ~/.ssh
    #     ssh-keyscan github.com >> ~/.ssh/known_hosts

    # - name: Deploy to production
    #   run: ssh user@your-server "cd /path/to/your/app && git pull && pm2 restart all"
    #   env:
    #     DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}