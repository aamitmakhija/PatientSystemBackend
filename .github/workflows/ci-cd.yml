name: CI/CD Pipeline

on:
  push:
    branches:
      - RejoizBranch
# pull_request:
#   branches:
#     - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.20.1'
    
    - name: Clean installation
      run: |
        rm -rf node_modules
        rm -f package-lock.json
        npm cache clean --force    

    - name: Install dependencies
      run: |
        npm install bcryptjs@3.0.2 --save
        npm install --no-package-lock --legacy-peer-deps
        npm install jsonwebtoken@9.0.2 --save

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/patientsystembackend:latest
          ${{ secrets.DOCKER_USERNAME }}/patientsystembackend:${{ github.sha }}
        build-args: |
          NODE_ENV=production

    # - name: Install dependencies
    #   run: npm install

    # - name: Run tests
    #   run: npm test

  deploy:
    needs: build
    runs-on: [self-hosted]
    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo usermod -aG docker $USER
        sudo chmod 666 /var/run/docker.sock

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Deploy Container
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/patientsystembackend:latest
        sudo docker stop patientsystembackend-container || true
        sudo docker rm patientsystembackend-container || true
        sudo docker run -d \
          --name patientsystembackend-container \
          -p 5001:5001 \
          -e NODE_ENV=production \
          -e MONGODB_URI="${MONGODB_URI}" \
          -e JWT_SECRET="${JWT_SECRET}" \
          --restart unless-stopped \
          ${{ secrets.DOCKER_USERNAME }}/patientsystembackend:latest
        
    - name: Check Container Status
      run: |
        sleep 10
        sudo docker ps
        sudo docker logs patientsystembackend-container